<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Remainder Theorem on lavafroth</title><link>https://lavafroth.is-a.dev/tags/remainder-theorem/</link><description>Recent content in Remainder Theorem on lavafroth</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 14 Feb 2025 09:40:11 +0530</lastBuildDate><atom:link href="https://lavafroth.is-a.dev/tags/remainder-theorem/index.xml" rel="self" type="application/rss+xml"/><item><title>In search of the smallest DNA complement function</title><link>https://lavafroth.is-a.dev/post/in-search-of-the-smallest-dna-compl/</link><pubDate>Fri, 14 Feb 2025 09:40:11 +0530</pubDate><guid>https://lavafroth.is-a.dev/post/in-search-of-the-smallest-dna-compl/</guid><description>&lt;p&gt;For the past few weeks, I have been trying to come up with a fast and purely agebraic function to convert DNA bases to their
respective complements.&lt;/p&gt;
&lt;h2 id="problem-statement"&gt;Problem statement&lt;/h2&gt;
&lt;p&gt;Our goal is rather straightforward. We aim to create a mapping of the characters &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;t&lt;/code&gt;, &lt;code&gt;g&lt;/code&gt;, &lt;code&gt;c&lt;/code&gt; and &lt;code&gt;n&lt;/code&gt; to their respective complements.
We choose to keep our solution one step behind the classical reverse complement which reverses the string after the mapping.&lt;/p&gt;</description></item><item><title>Volcano</title><link>https://lavafroth.is-a.dev/post/volcano-reverse-engineering-amateursctf-2023/</link><pubDate>Fri, 21 Jul 2023 18:29:59 +0530</pubDate><guid>https://lavafroth.is-a.dev/post/volcano-reverse-engineering-amateursctf-2023/</guid><description>&lt;p&gt;This reversing challenge is very mathematical, focusing mainly on modulo congruences.
Like all challenges, there is some scary looking obfuscation for the fun which I&amp;rsquo;ll try my best to
explain. The challenge description says that it was &lt;em&gt;inspired by recent &amp;ldquo;traumatic&amp;rdquo; events&lt;/em&gt; but I&amp;rsquo;m oblivious to what that
reference meant.&lt;/p&gt;
&lt;h2 id="decompilation"&gt;Decompilation&lt;/h2&gt;
&lt;p&gt;We start off with downloading the binary and opening it in Ghidra.&lt;/p&gt;
&lt;p&gt;In the list of functions under the Symbol Tree, we can navigate to the &lt;code&gt;entry&lt;/code&gt; function which looks like:&lt;/p&gt;</description></item></channel></rss>