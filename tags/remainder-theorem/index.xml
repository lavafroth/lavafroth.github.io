<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Remainder Theorem on lavafroth</title><link>https://lavafroth.is-a.dev/tags/remainder-theorem/</link><description>Recent content in Remainder Theorem on lavafroth</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 21 Jul 2023 18:29:59 +0530</lastBuildDate><atom:link href="https://lavafroth.is-a.dev/tags/remainder-theorem/index.xml" rel="self" type="application/rss+xml"/><item><title>Volcano</title><link>https://lavafroth.is-a.dev/post/volcano-reverse-engineering-amateursctf-2023/</link><pubDate>Fri, 21 Jul 2023 18:29:59 +0530</pubDate><guid>https://lavafroth.is-a.dev/post/volcano-reverse-engineering-amateursctf-2023/</guid><description>&lt;p>This reversing challenge is very mathematical, focusing mainly on modulo congruences.
Like all challenges, there is some scary looking obfuscation for the fun which I&amp;rsquo;ll try my best to
explain. The challenge description says that it was &lt;em>inspired by recent &amp;ldquo;traumatic&amp;rdquo; events&lt;/em> but I&amp;rsquo;m oblivious to what that
reference meant.&lt;/p>
&lt;h2 id="decompilation">Decompilation&lt;/h2>
&lt;p>We start off with downloading the binary and opening it in Ghidra.&lt;/p>
&lt;p>In the list of functions under the Symbol Tree, we can navigate to the &lt;code>entry&lt;/code> function which looks like:&lt;/p></description></item></channel></rss>