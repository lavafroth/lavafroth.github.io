<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Concurrency on lavafroth</title><link>https://lavafroth.is-a.dev/tags/concurrency/</link><description>Recent content in Concurrency on lavafroth</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 06 Dec 2023 10:58:10 +0530</lastBuildDate><atom:link href="https://lavafroth.is-a.dev/tags/concurrency/index.xml" rel="self" type="application/rss+xml"/><item><title>Abstracting Structured Patterns in Concurrent Programming</title><link>https://lavafroth.is-a.dev/post/abstracting-structured-patterns-in-concurrent-programming/</link><pubDate>Wed, 06 Dec 2023 10:58:10 +0530</pubDate><guid>https://lavafroth.is-a.dev/post/abstracting-structured-patterns-in-concurrent-programming/</guid><description>I hope this article provides a solid blueprint for building a concurrency management API. If you have questions or feel that I have missed something, feel free to talk about it in this repository&amp;rsquo;s issue tracker or the discussion board.
In recent months, I have come across multiple articles talking about the need of structured concurrency in modern programming languages as a first class citizen, replacing or at the very least, drastically enhancing the current paradigms like async-await.</description></item></channel></rss>