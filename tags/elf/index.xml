<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ELF on lavafroth</title><link>https://lavafroth.is-a.dev/tags/elf/</link><description>Recent content in ELF on lavafroth</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 19 Aug 2022 09:57:34 +0530</lastBuildDate><atom:link href="https://lavafroth.is-a.dev/tags/elf/index.xml" rel="self" type="application/rss+xml"/><item><title>I Saw a Little Elf</title><link>https://lavafroth.is-a.dev/post/r0-i-saw-a-little-elf/</link><pubDate>Fri, 19 Aug 2022 09:57:34 +0530</pubDate><guid>https://lavafroth.is-a.dev/post/r0-i-saw-a-little-elf/</guid><description>package main import ( &amp;#34;bytes&amp;#34; &amp;#34;encoding/base64&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;github.com/PuerkitoBio/goquery&amp;#34; &amp;#34;io/ioutil&amp;#34; &amp;#34;log&amp;#34; &amp;#34;net/http&amp;#34; &amp;#34;os/exec&amp;#34; &amp;#34;strings&amp;#34; ) const uri = &amp;#34;http://challenges.ringzer0team.com:10015/&amp;#34; // Helper function to wipe a character set // from a given string. func WipeSet(s, set string) string { for _, char := range set { s = strings.Replace(s, string(char), &amp;#34;&amp;#34;, -1) } return s } func main() { // Fetch the challenge page. resp, err := http.Get(uri) if err != nil { log.</description></item></channel></rss>